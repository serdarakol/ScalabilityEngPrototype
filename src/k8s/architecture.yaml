apiVersion: v1
kind: Namespace
metadata:
  name: prototype
---
apiVersion: v1
kind: Service
metadata:
  name: species-headless
spec:
  selector:
    app: species
  clusterIP: None
  ports:
    - port: 3000
      name: http

---
apiVersion: v1
kind: Service
metadata:
  name: species-svc
  namespace: prototype
spec:
  type: NodePort
  selector:
    app: species
  ports:
    - port: 80
      targetPort: 3000
      nodePort: 30080

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: species
spec:
  serviceName: species-headless
  replicas: 1
  selector:
    matchLabels:
      app: species
  template:
    metadata:
      labels:
        app: species
    spec:
      volumes:
        - name: redis-data
          emptyDir: {}
      containers:
        - name: redis
          image: redis:6.2-alpine
          ports:
            - containerPort: 6379
              name: redis
          args:
            - "redis-server"
            - "--appendonly"
            - "yes"
            - "--dir"
            - "/data"
          volumeMounts:
            - name: redis-data
              mountPath: /data
        - name: species-service
          image: sca-en-prototype/species-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: REDIS_URL
              value: "redis://127.0.0.1:6379"
            - name: DB_PATH
              value: "/app/data/species.db"
            - name: REQUEST_LIMIT
              value: "100"
            - name: CACHE_TTL
              value: "300"
          volumeMounts:
            - name: species-data
              mountPath: /app/data
  volumeClaimTemplates:
    - metadata:
        name: species-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
